# Generated by Django 5.2 on 2025-07-02 13:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContraceptiveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('emergency', 'Emergency Contraception'), ('hormonal', 'Hormonal'), ('barrier', 'Barrier'), ('iud', 'IUD'), ('implant', 'Implant'), ('injection', 'Injection'), ('patch', 'Patch'), ('ring', 'Ring'), ('pill', 'Birth Control Pill'), ('other', 'Other')], max_length=20)),
                ('affects_cycle', models.BooleanField(default=False, help_text='Does this contraceptive typically affect menstrual cycles?')),
                ('typical_cycle_delay_days', models.IntegerField(blank=True, help_text='Typical delay in days for next period (for emergency contraception)', null=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('physical', 'Physical'), ('emotional', 'Emotional'), ('digestive', 'Digestive'), ('skin', 'Skin'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContraceptiveUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_taken', models.DateTimeField()),
                ('dosage', models.CharField(blank=True, max_length=100)),
                ('reason', models.CharField(choices=[('emergency', 'Emergency Contraception'), ('regular', 'Regular Contraception'), ('missed_pill', 'Missed Regular Pill'), ('other', 'Other')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contraceptive_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myflo.contraceptivetype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_taken'],
            },
        ),
        migrations.CreateModel(
            name='CycleInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('cycle_length_trend', 'Cycle Length Trend'), ('symptom_pattern', 'Symptom Pattern'), ('mood_pattern', 'Mood Pattern'), ('irregularity_alert', 'Irregularity Alert'), ('contraceptive_effect', 'Contraceptive Effect'), ('general', 'General Insight')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('data_period_start', models.DateField()),
                ('data_period_end', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CycleProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_cycle_length', models.IntegerField(default=28, validators=[django.core.validators.MinValueValidator(21), django.core.validators.MaxValueValidator(45)])),
                ('average_period_length', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(10)])),
                ('first_period_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_irregular', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DailyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('flow', models.CharField(choices=[('none', 'None'), ('spotting', 'Spotting'), ('light', 'Light'), ('medium', 'Medium'), ('heavy', 'Heavy'), ('very_heavy', 'Very Heavy')], default='none', max_length=15)),
                ('mood', models.CharField(blank=True, choices=[('happy', 'Happy'), ('sad', 'Sad'), ('anxious', 'Anxious'), ('irritable', 'Irritable'), ('calm', 'Calm'), ('energetic', 'Energetic'), ('tired', 'Tired'), ('neutral', 'Neutral')], max_length=15)),
                ('energy_level', models.IntegerField(blank=True, help_text='Rate from 1 (very low) to 10 (very high)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('pain_level', models.IntegerField(blank=True, help_text='Rate from 0 (no pain) to 10 (severe pain)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('sleep_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('exercise_minutes', models.IntegerField(blank=True, null=True)),
                ('water_intake_glasses', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='HealthProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('specialty', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('appointment_type', models.CharField(choices=[('routine_checkup', 'Routine Checkup'), ('gynecology', 'Gynecology'), ('contraception', 'Contraception Consultation'), ('fertility', 'Fertility Consultation'), ('other', 'Other')], max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('health_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myflo.healthprovider')),
            ],
            options={
                'ordering': ['appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('period_reminder', 'Period Reminder'), ('ovulation_reminder', 'Ovulation Reminder'), ('pill_reminder', 'Pill Reminder'), ('log_reminder', 'Daily Log Reminder'), ('appointment_reminder', 'Appointment Reminder'), ('general', 'General')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('scheduled_date', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('next_period', 'Next Period'), ('ovulation', 'Ovulation'), ('fertile_window', 'Fertile Window'), ('pms_start', 'PMS Start')], max_length=20)),
                ('predicted_date', models.DateField()),
                ('confidence_level', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['predicted_date'],
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_reminder_days', models.IntegerField(default=1)),
                ('ovulation_reminder_enabled', models.BooleanField(default=True)),
                ('daily_log_reminder_time', models.TimeField(blank=True, null=True)),
                ('pill_reminder_times', models.JSONField(blank=True, default=list)),
                ('share_data_for_research', models.BooleanField(default=False)),
                ('allow_data_export', models.BooleanField(default=True)),
                ('date_format', models.CharField(choices=[('dd/mm/yyyy', 'DD/MM/YYYY'), ('mm/dd/yyyy', 'MM/DD/YYYY'), ('yyyy-mm-dd', 'YYYY-MM-DD')], default='dd/mm/yyyy', max_length=10)),
                ('temperature_unit', models.CharField(choices=[('C', 'Celsius'), ('F', 'Fahrenheit')], default='C', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=15)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('privacy_level', models.CharField(choices=[('private', 'Private'), ('family', 'Family Only'), ('public', 'Public')], default='private', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('flow_intensity', models.CharField(choices=[('light', 'Light'), ('medium', 'Medium'), ('heavy', 'Heavy'), ('very_heavy', 'Very Heavy')], default='medium', max_length=10)),
                ('cycle_day', models.IntegerField(default=1)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
                'unique_together': {('user', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='DailySymptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.IntegerField(help_text='Rate from 1 (mild) to 5 (severe)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('daily_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to='myflo.dailylog')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myflo.symptom')),
            ],
            options={
                'unique_together': {('daily_log', 'symptom')},
            },
        ),
    ]
